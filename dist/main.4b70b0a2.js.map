{"version":3,"sources":["main.js"],"names":["html","document","querySelector","style","string","string2","n","step","setTimeout","innerHTML","substring","window","scrollTo","length"],"mappings":";AAAA,IAAIA,EAAOC,SAASC,cAAc,SAC9BC,EAAQF,SAASC,cAAc,UAC/BE,EAAJ,uvDAiGIC,EAAU,GAEVC,EAAI,EAKJC,EAAO,SAAPA,IAEAC,WAAW,WAIW,OAAdJ,EAAOE,GAEPD,GAAW,OACU,MAAdD,EAAOE,GAEdD,GAAW,SAGXA,GAAWD,EAAOE,GAEtBN,EAAKS,UAAYJ,EACjBF,EAAMM,UAAYL,EAAOM,UAAU,EAAGJ,GACtCK,OAAOC,SAAS,EAAG,MACnBZ,EAAKY,SAAS,EAAG,MAGbN,EAAIF,EAAOS,OAAS,IAEpBP,GAAK,EACLC,MAIL,IAEPA","file":"main.4b70b0a2.js","sourceRoot":"../src","sourcesContent":["let html = document.querySelector(\"#html\");\nlet style = document.querySelector(\"#style\");\nlet string = `/*\n** 你好,我是一名前端\n** 接下来,我要演示我的前端功底\n** 我要加的样式,如下\n*/\n\n/* 白色背景太单调了，我们来点背景 */\nhtml {\n    background: rgba(200,200,200,0.8);\n}\n\n/* 准备一个div */\n\n#div1{\n    border: 1px solid whitesmoke;\n    width: 400px;\n    height: 400px;\n}\n\n/*\n** 接下来我把 div 变成一个八卦图\n** 注意看好了\n** 首先，把 div 变成一个圆\n**/\n\n#div1{\n    border-radius: 50%;\n    box-shadow: 0 0 3px rgba(0,0,0,0.5);\n    border: none;\n}\n\n/* 八卦是阴阳形成的\n** 一黑一白\n** 用个背景渐变吧 gradient background generator 链接: https://cssgradient.io/\n**/\n\n#div1{\n    background: linear-gradient(90deg, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 50%, rgba(0,0,0,1) 50%, rgba(0,0,0,1) 100%);\n}\n\n/*\n** 加两个神秘的小球\n**/\n\n#div1::before,#div1::after{\n    width: 200px;\n    height: 200px;\n    left: 50%;\n    transform: translateX(-50%);\n    border: 1px solid whitesmoke;\n    border-radius: 50%;\n}\n#div1::before{\n    top: 0;\n    background: #000;\n    background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 25%, rgba(0,0,0,1) 25%, rgba(0,0,0,1) 100%);\n    border:none;\n}\n#div1::after{\n    bottom: 0;\n    left: 50%;\n    background: #fff;\n    background: radial-gradient(circle, rgba(0,0,0,1) 0%, rgba(0,0,0,1) 25%, rgba(255,255,255,1) 25%, rgba(255,255,255,1) 100%, rgba(0,0,0,1) 100%);\n    border:none;\n}\n\n/* 加点阴影效果吧 */\n#div1{\n    box-shadow: 0 0 18px 18px #666666;\n}\n\n/* 让太极图转起来吧 */\n\n#div1{\n    animation: 5s linear infinite taiJi;\n}\n\n@keyframes taiJi{\n    from{\n        left: 50%;\n        transform : translateX(-50%) rotate(0deg);\n    }\n    to{\n        left: 50%;\n        transform : translateX(-50%) rotate(360deg);\n    }\n}\n\n/*\n** 一个八卦终于完成了\n** 源码：https://github.com/xmasuhai/cv-1\n** 效果：http://xmasuhai.xyz/cv-1/dist/index.html\n** 谢谢耐心看完\n** 这是我的:联系 主页 简历 XXX\n*/\n\n`;\nlet string2 = \"\";\n// string = string.replace(/\\n/g, \"<br>\");\nlet n = 0; // string[n]下标\n// html.innerHTML = \"\"; //string[n]; //string.substring(0, n); // 初始 // 把`string[n]`换为`string.substring(0,n)` 显示完整字符串，即显示从`0`个到`n`个字符串\n// console.log(string.length);\n// console.log(html.innerHTML)\n/* 用递归的setTimeout实现 封装进一个函数 */\nlet step = () => {\n    // console.log(\"1s后把\" + n + \"加1并显示\" + string[n]);\n    setTimeout(() => {\n        // console.log(n);\n        // n = n + 1; //放到下一次循环前\n        // console.log(string[n]);\n        if (string[n] === \"\\n\") {\n            //是回车就改成<br> 累加赋值给string2\n            string2 += \"<br>\";\n        } else if (string[n] === \" \") {\n            // 转义缩进\n            string2 += \"&nbsp;\";\n        } else {\n            //如果不是回车就照搬\n            string2 += string[n];\n        }\n        html.innerHTML = string2;\n        style.innerHTML = string.substring(0, n);\n        window.scrollTo(0, 9999);\n        html.scrollTo(0, 9999);\n        // console.log(string2);\n        // html.innerHTML = string.substring(0, n);\n        if (n < string.length - 1) {\n            // n不是最后一个\n            n += 1;\n            step();\n        } else {\n            // n是最后一个\n        }\n    }, 0);\n};\nstep();"]}